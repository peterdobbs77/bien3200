// C code for solving a single ODE using the 4th order Runge-Kutta
#include<stdio.h>
#include<stdlib.h>
#include<math.h>

float a1, B1, d1, a2, B2, d2;  //global variables

float slope1(float t,float x, float y){
	float out1;
	out1 = a1*x + B1*y + d1*t;
	return out1;
}

float slope2(float t,float x, float y){
	float out2;
	out2 = a2*x + B2*y + d2*t;
	return out2;
}

int main (void){
	float t0=0, tf, stepsize; //step size
	float ti;
	float k11, k12, k13, k14, q11, q12, q13, q14; //slopes
	
	int N;
	char sim_file[100];
	FILE *out_file;
	float *X, *Y;
	
	printf("Enter the final time for solution \n");
	scanf("%f", &tf);
	
	printf("Enter the solution step size h \n");
	scanf("%f", &stepsize);
	
	N  = (int)((tf-t0)/stepsize);  // number of points
	
	printf("Enter file nameto store solution \n");
	scanf("%s", sim_file);
	
	out_file = fopen(sim_file, "w");
	
	X = (float*) calloc(sizeof(float), N);
	Y = (float*) calloc(sizeof(float), N);
	X[0]=x0;
	Y[0]=y0;
	
	fprintf(out_file, "%f \t %f \t \n", X[0], Y[0]);
	
	for(int i = 0;  i < N; ++i){
		ti = i*stepsize;
		
		k11 = stepsize*slope1(ti,X[i],Y[i]);
		q11 = stepsize*slope2(ti,X[i],Y[i]);
		
		k12 = stepsize*slope1(ti+stepsize/2,X[i]+k11/2,Y[i]+q11/2);
		q12 = stepsize*slope2(ti+stepsize/2,X[i]+k11/2,Y[i]+q11/2);
		
		k13 = stepsize*slope1(ti+stepsize/2,X[i]+k12/2,Y[i]+q12/2);
		q13 = stepsize*slope2(ti+stepsize/2,X[i]+k12/2,Y[i]+q12/2);
		
		k14 = stepsize*slope1(ti+stepsize,X[i]+k13,Y[i]+q13);
		q14 = stepsize*slope2(ti+stepsize,X[i]+k13,Y[i]+q13);
		
		X[i+1] = X[i]+(1.0/6)*(k11+2*k12+2*k13+k14);
		Y[i+1] = Y[i]+(1.0/6)*(q11+2*q12+2*q13+q14);
		
		fprintf(out_file, "%f \t %f \t %f \t \n",ti,X[i+1],Y[i+1]);
	}
	
	return 0;
}